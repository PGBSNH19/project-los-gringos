name: Docker Image CI

on:
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

### ⬇ IMPORTANT PART ⬇ ###

      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.1.0 # GitHub action name (leave it as it is).
        with:
          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          email: ${{ secrets.HEROKU_EMAIL }}
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          
          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          
          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          # Dokerfile name. Optional, by default will be set to "Dockerfile".
          dockerfile_name: Dockerfile

          # Additional options of docker build command. (Optional)
          docker_options: "--no-cache"
          
          # Dokerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./VertPub.Backend/
          
### ⬆ IMPORTANT PART ⬆ ###
      # - uses: actions/checkout@v2
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: virtpubbackend #Must be unique in Herokus
      #     heroku_email: fredrikoden87@gmail.com
      # - run: |
      #     docker build VertPub.Backend/ -t Docker/virtpubregistrybackend:latest

      # - run: |
      #     heroku container:login
      #     heroku container:push web -a virtpubbackend
      #     heroku container:release web -a virtpubbackend
